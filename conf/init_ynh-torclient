#!/bin/bash
### BEGIN INIT INFO
# Provides: ynh-torclient
# Required-Start:    $network $remote_fs $syslog ynh-hotspot
# Required-Stop:     $network $remote_fs $syslog ynh-hotspot
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Set prerequisites for wifi torclient.
# Description:       Set prerequisites for wifi torclient.
### END INIT INFO

# Functions
## State functions

has_vpnclient_app() {
  [ -e /tmp/.ynh-vpnclient-started ]
}

has_torclient_app() {
  [ -e /tmp/.ynh-torclient-started ]
}
has_hotspot_app() {
  [ -e /tmp/.ynh-hotspot-started ]
}

is_nat_set() {
  iptables -nvt nat -L PREROUTING | grep REDIRECT | grep -q "${torclient_wifi_device_old}"
}

is_tor_running() {
  service tor status &> /dev/null
}

is_running() {
  has_hotspot_app && is_tor_running && is_nat_set
}

set_nat() {
  iptables -t nat -A PREROUTING -i ${torclient_wifi_device} -p udp --dport 53 -j REDIRECT --to-ports 9053
  iptables -t nat -A PREROUTING -i ${torclient_wifi_device} -p tcp ! --dport 53 --syn -j REDIRECT --to-ports 9040
}

set_forwarding() {
  sysctl -w net.ipv6.conf.all.forwarding=1 > /dev/null
  sysctl -w net.ipv4.conf.all.forwarding=1 > /dev/null
}

unset_nat() {
  internet_device=${1}

  iptables -t nat -D PREROUTING -i ${torclient_wifi_device_old} -p udp --dport 53 -j REDIRECT --to-ports 9053
  iptables -t nat -D PREROUTING -i ${torclient_wifi_device_old} -p tcp ! --dport 53 --syn -j REDIRECT --to-ports 9040
}

stop_tor() {
  service tor stop
}

start_tor() {
  cp /etc/tor/torrc.tpl /etc/tor/torrc
  sed "s|<TPL:TOR_NETWORK>|${torclient_wifi_prefix}|g" -i /etc/tor/torrc
  service tor start
}

## Tools

moulinette_get() {
  var=${1}

  value=$(yunohost app setting hotspot "${var}")

  if [[ "${value}" =~ "An instance is already running" ]]; then
    echo "${value}" >&2
    exit 1
  fi

  echo "${value}"
} 

moulinette_torclient_get() {
  var=${1}

  value=$(yunohost app setting torclient "${var}")

  if [[ "${value}" =~ "An instance is already running" ]]; then
    echo "${value}" >&2
    exit 1
  fi

  echo "${value}"
}

moulinette_set() {
  var=${1}
  value=${2}

  msg=$(yunohost app setting torclient "${var}" -v "${value}")

  if [ ! $? -eq 0 ]; then
    echo "${msg}" >&2
    exit 1
  fi
}

do_start() {
  if is_running; then
    echo "Already started"
  else
    echo "[torclient] Starting..."
    touch /tmp/.ynh-tor-started

    # Run tor
    if ! is_tor_running; then
      echo "Run Tor"
      start_tor
    fi

    # Set ipv4 NAT
    if ! is_nat_set; then
      echo "Set NAT settings"
      set_nat
    fi
  fi
  moulinette_set wifi_device_old $torclient_wifi_device
}

do_stop() {
  if ! is_running; then
    echo "Already stoped"
  else
    echo "[torclient] Stopping..."
    rm /tmp/.ynh-tor-started
  
    if is_nat_set; then
      echo "Unset NAT"
      unset_nat
    fi

    if is_tor_running; then
      echo "Stop Tor"
      stop_tor
    fi
  
    if has_vpnclient_app; then
      service ynh-vpnclient start
    fi
  fi
}

do_status() {
  exitcode=0

  if is_tor_running; then
    echo "[OK] Tor is running"
  else
    echo "[ERR] Tor is not running"
    exitcode=1
  fi

  if is_nat_set; then
    echo "[OK] IPv4 nat rules set"
  else
    echo "[ERR] No IPv4 nat rules not set"
    exitcode=1
  fi

  exit ${exitcode}
}

# Restart php5-fpm at the first start (it needs to be restarted after the slapd start)
if [ ! -e /tmp/.ynh-hotspot-boot ]; then
  touch /tmp/.ynh-hotspot-boot
  service php5-fpm restart
fi

# Variables

echo "Retrieving Yunohost settings... "

torclient_wifi_ssid=$(moulinette_torclient_get wifi_ssid)
torclient_wifi_device_old=$(moulinette_torclient_get wifi_device_old)
if [ "$torclient_wifi_ssid" == "notset" ] ; then
  echo "[ERR] Essid is not set for torclient"
  exit 1
fi
if [ "$torclient_wifi_device_old" == "notset" ] && [ "$1" == "stop" ] ; then
  echo "Torclient never started"
  exit 1
fi
IFS='|' read -a ynh_wifi_ssid <<< "$(moulinette_get wifi_ssid)"
IFS='|' read -a ynh_wifi_prefix <<< "$(moulinette_get ip4_nat_prefix)"
ynh_multissid=$(moulinette_get multissid)
for i in $(seq 0 $((${ynh_multissid} - 1))); do
  if [ ${ynh_wifi_ssid[$i]} == ${torclient_wifi_ssid} ] ; then
    if [ ${i} -eq 0 ]; then
      torclient_wifi_device=$(moulinette_get wifi_device)
    else
      torclient_wifi_device="hotspot${i}"
    fi
    torclient_wifi_prefix=${ynh_wifi_prefix[$i]}

    echo "Torclient will be active on $torclient_wifi_device device and $torclient_wifi_ssid SSID"
    break
  fi
done

if [ ! $torclient_wifi_device ] ; then
  echo "[ERR] SSID not found for torclient"
  exit 1
fi

echo "OK"

# Script

case "$1" in
  start)
    do_start
    ;;
  stop)
    do_stop
    ;;
  restart)
    do_stop
    do_start
    ;;
  status)
    do_status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
  ;;
esac


exit 0
